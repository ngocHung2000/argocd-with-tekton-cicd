apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: cicd-example-nodejs-app
spec:
  description: | 
    This pipeline clones a git repo, then echoes the README file to the stout.
  params:
  - name: repo-url
    type: string
    description: The git repo URL to clone from.
  - name: PATH_APPLICATION
    type: string
  - name: REGISTRY_CREDENTIALS
    type: string
  - name: TARGET_REGISTRY
    description: The target registry will push
    type: string
  - name: IMAGE_NAME 
    description: Image name
    type: string
  - name: IMAGE_VERSION
    description: Image version
  - name: repo-url-deployment
    type: string
    description: The git repo URL to clone from.
  - name: IMAGE_NAME_DEPLOYMENT
    type: string
    description: The git repo URL to clone from.
  - name: GIT_USER_NAME
    type: string
  - name: GIT_USER_EMAIL
    type: string
  - name: GIT_SCRIPT
    type: string
  - name: PATH_DEPLOYMENT
    type: string
  - name: ARGS
    type: string
  - name: SONAR_PROJECT_KEY
    type: string
  - name: SONAR_PATH_SCAN
    type: string
  - name: SONAR_HOST_URL
    type: string
  - name: SONAR_TOKEN_LOGIN
    type: string
  workspaces:
  - name: shared-data
  - name: git-credentials
  tasks:
  # Fetch all code
  - name: fetch-source
    taskRef:
      name: git-clone
    workspaces:
    - name: output
      workspace: shared-data
    - name: ssh-directory
      workspace: git-credentials
    params:
    - name: url
      value: $(params.repo-url)
  # Show file Repo
  - name: show-repo
    runAfter: ["fetch-source"]
    taskRef:
      name: show-repo
    workspaces:
    - name: source
      workspace: shared-data
    params:
      - name: PATH_APPLICATION
        value: "$(params.PATH_APPLICATION)"
  # Trivy Scanner
  - name: trivy-scanner
    runAfter: ["show-repo"]
    taskRef:
      name: trivy-scanner
    workspaces:
    - name: manifest-dir
      workspace: shared-data
    params:
    - name: ARGS
      value: $(params.ARGS)
    - name: PATH_APPLICATION
      value: "$(params.PATH_APPLICATION)"
  # Build and push
  - name: build-and-push-nodejs-app
    runAfter: ["trivy-scanner"]
    taskRef:
      name: build-nodejs-app
    workspaces:
    - name: source
      workspace: shared-data
    params:
    - name: REGISTRY_CREDENTIALS
      value: $(params.REGISTRY_CREDENTIALS)
    - name: TARGET_REGISTRY
      value: $(params.TARGET_REGISTRY)
    - name: IMAGE_NAME 
      value: $(params.IMAGE_NAME)
    - name: IMAGE_VERSION
      value: $(params.IMAGE_VERSION)
  - name: sonarqube-scanner
    runAfter: ["build-and-push-nodejs-app"]
    taskRef:
      name: sonarqube-scanner
    workspaces:
    - name: source
      workspace: shared-data
    params:
    - name: SONAR_PROJECT_KEY
      value: $(params.SONAR_PROJECT_KEY)
    - name: SONAR_PATH_SCAN
      value: $(params.SONAR_PATH_SCAN)
    - name: SONAR_HOST_URL
      value: $(params.SONAR_HOST_URL)
    - name: SONAR_TOKEN_LOGIN
      value: $(params.SONAR_TOKEN_LOGIN)
    - name: PATH_APPLICATION
      value: "$(params.PATH_APPLICATION)"
  # Fetch source deployment
  - name: fetch-source-deployment
    taskRef:
      name: git-deployment
    runAfter: ["sonarqube-scanner"]
    workspaces:
    - name: output
      workspace: shared-data
    - name: ssh-directory
      workspace: git-credentials
    params:
    - name: url
      value: $(params.repo-url-deployment)
  - name: show-repo-deployment
    runAfter: ["fetch-source-deployment"]
    taskRef:
      name: show-repo-deployment
    workspaces:
    - name: source
      workspace: shared-data
    params:
    - name: IMAGE_NAME_DEPLOYMENT
      value: $(params.IMAGE_NAME)
    - name: IMAGE_VERSION
      value: $(params.IMAGE_VERSION)
    - name: PATH_DEPLOYMENT
      value: $(params.PATH_DEPLOYMENT)
  - name: push-change-deploy
    runAfter: ["show-repo-deployment"]
    taskRef:
      name: push-change-deploy
    workspaces:
    - name: source
      workspace: shared-data
    - name: ssh-directory
      workspace: git-credentials
    params:
    - name: GIT_USER_NAME
      value: $(params.GIT_USER_NAME)
    - name: GIT_USER_EMAIL
      value: $(params.GIT_USER_EMAIL)
    - name: GIT_SCRIPT
      value: $(params.GIT_SCRIPT)
